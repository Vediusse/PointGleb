{
    "sourceFile": "Dockerfile.statistic.dev",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1754148619655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1754148619655,
            "name": "Commit-0",
            "content": "FROM openjdk:21-jdk-slim\n\nWORKDIR /app\n\n# Устанавливаем права на выполнение для mvnw\n\n\n# Этап 1: Копируем только файлы для зависимостей\nCOPY mvnw .\nCOPY mvnw.cmd .\nCOPY pom.xml .\nCOPY .mvn .mvn\nCOPY user/pom.xml ./user/pom.xml\nCOPY point/pom.xml ./point/pom.xml\nCOPY statistic/pom.xml ./statistic/pom.xml\nCOPY common/pom.xml ./common/pom.xml\n\n# Этап 2: Скачиваем зависимости (кэшируется отдельно)\nRUN ./mvnw dependency:go-offline -pl statistic -am\n\n# Этап 3: Копируем исходный код (меняется часто)\nCOPY statistic/src ./statistic/src\nCOPY common/src ./common/src\n\n# Этап 4: Компилируем (кэшируется отдельно)\nRUN ./mvnw compile -pl statistic -am -DskipTests\n\n# Этап 5: Создаем JAR (меняется при изменении кода)\nRUN ./mvnw package -pl statistic -am -DskipTests\n\n# Создаем директорию для приложения\nRUN mkdir -p /app/target\n\n# Копируем собранный JAR файл\nRUN cp statistic/target/*.jar /app/target/app.jar\n\n# Открываем порт\nEXPOSE 8095\n\n# Запускаем приложение\nCMD [\"java\", \"-jar\", \"/app/target/app.jar\"] "
        }
    ]
}