{
    "sourceFile": "Dockerfile.point",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1754147481760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1754147481760,
            "name": "Commit-0",
            "content": "FROM openjdk:21-jdk-slim\n\nWORKDIR /app\n\n# Копируем Maven wrapper и pom.xml\nCOPY mvnw .\nCOPY mvnw.cmd .\nCOPY pom.xml .\nCOPY .mvn .mvn\n\n# Копируем pom.xml файлы всех модулей\nCOPY user/pom.xml ./user/pom.xml\nCOPY point/pom.xml ./point/pom.xml\nCOPY statistic/pom.xml ./statistic/pom.xml\nCOPY common/pom.xml ./common/pom.xml\n\n# Копируем исходный код\nCOPY point/src ./point/src\nCOPY common/src ./common/src\n\n# Устанавливаем права на выполнение для mvnw\nRUN chmod +x mvnw\n\n# Проверяем наличие файлов\nRUN ls -la .mvn/wrapper/\nRUN ls -la point/\nRUN ls -la common/\n\n# Собираем проект\nRUN ./mvnw clean package -pl point -am -DskipTests\n\n# Создаем директорию для приложения\nRUN mkdir -p /app/target\n\n# Копируем собранный JAR файл\nRUN cp point/target/*.jar /app/target/app.jar\n\n# Открываем порты\nEXPOSE 8091 8062\n\n# Запускаем приложение\nCMD [\"java\", \"-jar\", \"/app/target/app.jar\"] "
        }
    ]
}