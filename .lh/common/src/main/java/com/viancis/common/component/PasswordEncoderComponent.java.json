{
    "sourceFile": "common/src/main/java/com/viancis/common/component/PasswordEncoderComponent.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1754181590506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754243604685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,26 +1,1 @@\n-package com.viancis.common.component;\n-\n-import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\n-import org.springframework.stereotype.Component;\n-\n-\n-@Component\n-public class PasswordEncoderComponent {\n-\n-    private final BCryptPasswordEncoder passwordEncoder;\n-\n-    public PasswordEncoderComponent() {\n-        this.passwordEncoder = new BCryptPasswordEncoder();\n-    }\n-\n-    public String encodePassword(String password) {\n-        if (password == null || password.trim().isEmpty()) {\n-            throw new IllegalArgumentException(\"Password cannot be null or empty\");\n-        }\n-        return passwordEncoder.encode(password);\n-    }\n-\n-    public boolean matches(String rawPassword, String encodedPassword) {\n-        return passwordEncoder.matches(rawPassword, encodedPassword);\n-    }\n-}\n\\ No newline at end of file\n+ \n\\ No newline at end of file\n"
                }
            ],
            "date": 1754181590506,
            "name": "Commit-0",
            "content": "package com.viancis.common.component;\n\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\nimport org.springframework.stereotype.Component;\n\n\n@Component\npublic class PasswordEncoderComponent {\n\n    private final BCryptPasswordEncoder passwordEncoder;\n\n    public PasswordEncoderComponent() {\n        this.passwordEncoder = new BCryptPasswordEncoder();\n    }\n\n    public String encodePassword(String password) {\n        if (password == null || password.trim().isEmpty()) {\n            throw new IllegalArgumentException(\"Password cannot be null or empty\");\n        }\n        return passwordEncoder.encode(password);\n    }\n\n    public boolean matches(String rawPassword, String encodedPassword) {\n        return passwordEncoder.matches(rawPassword, encodedPassword);\n    }\n}"
        }
    ]
}