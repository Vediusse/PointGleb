{
    "sourceFile": "watch.sh",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1754176703947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1754176703947,
            "name": "Commit-0",
            "content": "#!/bin/bash\n\n# Скрипт для автоматического мониторинга изменений в коде\n# Автор: Gleb\n# Версия: 1.0\n\nset -e\n\n# Цвета для вывода\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nBLUE='\\033[0;34m'\nNC='\\033[0m'\n\nprint_info() {\n    echo -e \"${BLUE}[WATCH]${NC} $1\"\n}\n\nprint_success() {\n    echo -e \"${GREEN}[SUCCESS]${NC} $1\"\n}\n\nprint_warning() {\n    echo -e \"${YELLOW}[WARNING]${NC} $1\"\n}\n\nprint_error() {\n    echo -e \"${RED}[ERROR]${NC} $1\"\n}\n\n# Проверка зависимостей\ncheck_dependencies() {\n    if ! command -v fswatch &> /dev/null; then\n        print_error \"fswatch не установлен. Установите его:\"\n        echo \"  macOS: brew install fswatch\"\n        echo \"  Ubuntu: sudo apt-get install fswatch\"\n        echo \"  CentOS: sudo yum install fswatch\"\n        exit 1\n    fi\n}\n\n# Функция перезапуска сервиса\nrestart_service() {\n    local service=$1\n    print_info \"Перезапуск сервиса: $service\"\n    \n    # Остановка сервиса\n    docker-compose -f docker-compose.dev.yml stop \"$service\"\n    \n    # Пересборка и запуск\n    docker-compose -f docker-compose.dev.yml up -d --build \"$service\"\n    \n    print_success \"Сервис $service перезапущен\"\n}\n\n# Функция мониторинга изменений\nwatch_changes() {\n    local service=$1\n    \n    print_info \"Запуск мониторинга для сервиса: $service\"\n    print_info \"Нажмите Ctrl+C для остановки\"\n    \n    # Определяем директории для мониторинга\n    local watch_dirs=\"\"\n    case $service in\n        \"user-service\")\n            watch_dirs=\"./user/src ./common/src\"\n            ;;\n        \"point-service\")\n            watch_dirs=\"./point/src ./common/src\"\n            ;;\n        \"statistic-service\")\n            watch_dirs=\"./statistic/src ./common/src\"\n            ;;\n        *)\n            print_error \"Неизвестный сервис: $service\"\n            exit 1\n            ;;\n    esac\n    \n    # Мониторинг изменений\n    fswatch -o $watch_dirs | while read f; do\n        print_info \"Обнаружены изменения в $service\"\n        restart_service \"$service\"\n        print_info \"Ожидание новых изменений...\"\n    done\n}\n\n# Показать справку\nshow_help() {\n    echo \"Использование: $0 [ОПЦИИ]\"\n    echo \"\"\n    echo \"ОПЦИИ:\"\n    echo \"  -h, --help              Показать эту справку\"\n    echo \"  -s, --service SERVICE   Сервис для мониторинга\"\n    echo \"\"\n    echo \"СЕРВИСЫ:\"\n    echo \"  user-service            Мониторинг user-service\"\n    echo \"  point-service           Мониторинг point-service\"\n    echo \"  statistic-service       Мониторинг statistic-service\"\n    echo \"\"\n    echo \"ПРИМЕРЫ:\"\n    echo \"  $0 -s user-service     # Мониторинг user-service\"\n    echo \"  $0 -s point-service    # Мониторинг point-service\"\n}\n\n# Основная логика\nmain() {\n    local service=\"\"\n    \n    # Парсинг аргументов\n    while [[ $# -gt 0 ]]; do\n        case $1 in\n            -h|--help)\n                show_help\n                exit 0\n                ;;\n            -s|--service)\n                service=\"$2\"\n                shift 2\n                ;;\n            *)\n                print_error \"Неизвестная опция: $1\"\n                show_help\n                exit 1\n                ;;\n        esac\n    done\n    \n    # Проверка аргументов\n    if [ -z \"$service\" ]; then\n        print_error \"Не указан сервис для мониторинга\"\n        show_help\n        exit 1\n    fi\n    \n    # Проверка зависимостей\n    check_dependencies\n    \n    # Проверка Docker\n    if ! command -v docker &> /dev/null; then\n        print_error \"Docker не установлен!\"\n        exit 1\n    fi\n    \n    if ! command -v docker-compose &> /dev/null; then\n        print_error \"Docker Compose не установлен!\"\n        exit 1\n    fi\n    \n    # Проверка файла docker-compose.dev.yml\n    if [ ! -f \"docker-compose.dev.yml\" ]; then\n        print_error \"Файл docker-compose.dev.yml не найден!\"\n        exit 1\n    fi\n    \n    print_info \"=== Автоматический мониторинг изменений ===\"\n    \n    # Запуск мониторинга\n    watch_changes \"$service\"\n}\n\n# Запуск основной функции\nmain \"$@\" "
        }
    ]
}