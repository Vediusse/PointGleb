{
    "sourceFile": "Dockerfile.point.dev",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1754148619649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754149646969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n WORKDIR /app\n \n \n \n-# Этап 1: Копируем только файлы для зависимостей\n+\n COPY mvnw .\n COPY mvnw.cmd .\n COPY pom.xml .\n COPY .mvn .mvn\n@@ -13,28 +13,28 @@\n COPY point/pom.xml ./point/pom.xml\n COPY statistic/pom.xml ./statistic/pom.xml\n COPY common/pom.xml ./common/pom.xml\n \n-# Этап 2: Скачиваем зависимости (кэшируется отдельно)\n+\n RUN ./mvnw dependency:go-offline -pl point -am\n \n-# Этап 3: Копируем исходный код (меняется часто)\n+\n COPY point/src ./point/src\n COPY common/src ./common/src\n \n-# Этап 4: Компилируем (кэшируется отдельно)\n+\n RUN ./mvnw compile -pl point -am -DskipTests\n \n-# Этап 5: Создаем JAR (меняется при изменении кода)\n+\n RUN ./mvnw package -pl point -am -DskipTests\n \n-# Создаем директорию для приложения\n+\n RUN mkdir -p /app/target\n \n-# Копируем собранный JAR файл\n+\n RUN cp point/target/*.jar /app/target/app.jar\n \n-# Открываем порты\n+\n EXPOSE 8091 8062\n \n-# Запускаем приложение\n+\n CMD [\"java\", \"-jar\", \"/app/target/app.jar\"] \n\\ No newline at end of file\n"
                }
            ],
            "date": 1754148619649,
            "name": "Commit-0",
            "content": "FROM openjdk:21-jdk-slim\n\nWORKDIR /app\n\n\n\n# Этап 1: Копируем только файлы для зависимостей\nCOPY mvnw .\nCOPY mvnw.cmd .\nCOPY pom.xml .\nCOPY .mvn .mvn\nCOPY user/pom.xml ./user/pom.xml\nCOPY point/pom.xml ./point/pom.xml\nCOPY statistic/pom.xml ./statistic/pom.xml\nCOPY common/pom.xml ./common/pom.xml\n\n# Этап 2: Скачиваем зависимости (кэшируется отдельно)\nRUN ./mvnw dependency:go-offline -pl point -am\n\n# Этап 3: Копируем исходный код (меняется часто)\nCOPY point/src ./point/src\nCOPY common/src ./common/src\n\n# Этап 4: Компилируем (кэшируется отдельно)\nRUN ./mvnw compile -pl point -am -DskipTests\n\n# Этап 5: Создаем JAR (меняется при изменении кода)\nRUN ./mvnw package -pl point -am -DskipTests\n\n# Создаем директорию для приложения\nRUN mkdir -p /app/target\n\n# Копируем собранный JAR файл\nRUN cp point/target/*.jar /app/target/app.jar\n\n# Открываем порты\nEXPOSE 8091 8062\n\n# Запускаем приложение\nCMD [\"java\", \"-jar\", \"/app/target/app.jar\"] "
        }
    ]
}