{
    "sourceFile": "deploy/README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1754241665622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1754241665622,
            "name": "Commit-0",
            "content": "# Система деплоя и генерации сервисов\n\nЭта директория содержит все инструменты для управления проектом, включая систему деплоя и генераторы сервисов.\n\n## Структура\n\n```\ndeploy/\n├── scripts/                    # Скрипты управления\n│   ├── deploy.sh              # Основной скрипт деплоя\n│   ├── service-generator.sh   # Генератор новых сервисов\n│   ├── module-manager.sh      # Менеджер мультимодульных зависимостей\n│   ├── local-start.sh         # Локальный запуск сервисов\n│   └── watch-*.sh            # Скрипты мониторинга изменений\n├── docs/                      # Документация\n│   ├── SERVICE_GENERATOR.md   # Документация генератора сервисов\n│   ├── MODULE_MANAGER.md      # Документация менеджера модулей\n│   ├── EXAMPLES.md            # Примеры использования\n│   └── README_DEPLOY.md       # Документация деплоя\n└── Makefile                   # Управление проектом\n```\n\n## Быстрый старт\n\n### 1. Настройка\n```bash\nmake setup\n```\n\n### 2. Запуск проекта\n```bash\nmake dev\n```\n\n### 3. Создание нового сервиса\n```bash\n# Создать модуль\n./scripts/module-manager.sh -a auth\n\n# Создать сервис\n./scripts/service-generator.sh -n auth-service -p 8092 -m auth -d common\n```\n\n## Основные инструменты\n\n### 1. Система деплоя (`deploy.sh`)\n\nАвтоматизированный деплой с кэшированием зависимостей:\n\n```bash\n# Быстрый деплой\n./scripts/deploy.sh\n\n# Принудительная пересборка\n./scripts/deploy.sh -f\n\n# Показать логи\n./scripts/deploy.sh -l\n\n# Остановить сервисы\n./scripts/deploy.sh -d\n```\n\n### 2. Генератор сервисов (`service-generator.sh`)\n\nАвтоматическое создание новых сервисов в docker-compose:\n\n```bash\n# Создать сервис\n./scripts/service-generator.sh -n auth-service -p 8092 -m auth -d common\n\n# Показать сервисы\n./scripts/service-generator.sh -l\n\n# Удалить сервис\n./scripts/service-generator.sh -r auth-service\n```\n\n### 3. Менеджер модулей (`module-manager.sh`)\n\nУправление мультимодульной архитектурой Maven:\n\n```bash\n# Создать модуль\n./scripts/module-manager.sh -a auth\n\n# Добавить зависимости\n./scripts/module-manager.sh -d auth,common\n\n# Показать модули\n./scripts/module-manager.sh -l\n\n# Пересобрать модуль\n./scripts/module-manager.sh -b auth\n```\n\n### 4. Makefile\n\nУдобные команды для управления проектом:\n\n```bash\n# Основные команды\nmake dev              # Быстрый деплой\nmake force            # Принудительная пересборка\nmake clean            # Очистка\nmake logs             # Показать логи\n\n# Генераторы\nmake service-generator # Справка по генератору сервисов\nmake module-manager   # Справка по менеджеру модулей\n\n# Мониторинг\nmake watch-all-ultra  # Мониторинг всех сервисов\nmake watch-user       # Мониторинг user-service\n```\n\n## Примеры использования\n\n### Создание нового функционала\n\n```bash\n# 1. Создать модуль\n./scripts/module-manager.sh -a payment\n\n# 2. Добавить зависимости\n./scripts/module-manager.sh -d payment,common,user\n\n# 3. Создать сервис\n./scripts/service-generator.sh -n payment-service -p 8093 -m payment -d common,user\n\n# 4. Запустить\nmake dev\n```\n\n### Интеграция с существующими сервисами\n\n```bash\n# Добавить новый модуль к user сервису\n./scripts/module-manager.sh -d user,security\n\n# Пересобрать user сервис\n./scripts/module-manager.sh -b user\n\n# Перезапустить сервис\nmake rebuild-user\n```\n\n## Документация\n\n- [SERVICE_GENERATOR.md](docs/SERVICE_GENERATOR.md) - Подробная документация генератора сервисов\n- [MODULE_MANAGER.md](docs/MODULE_MANAGER.md) - Документация менеджера модулей\n- [EXAMPLES.md](docs/EXAMPLES.md) - Практические примеры\n- [README_DEPLOY.md](docs/README_DEPLOY.md) - Документация системы деплоя\n\n## Возможности\n\n### ✅ Автоматизация\n- Автоматическое создание сервисов в docker-compose\n- Генерация Dockerfile'ов для dev и prod\n- Управление мультимодульными зависимостями\n- Кэширование Maven зависимостей\n\n### ✅ Мониторинг\n- Автоматический перезапуск при изменениях\n- Мониторинг отдельных сервисов\n- Параллельный мониторинг всех сервисов\n- Логирование и отладка\n\n### ✅ Гибкость\n- Поддержка dev и prod окружений\n- Локальный и Docker режимы\n- Настраиваемые зависимости\n- Принудительная пересборка\n\n### ✅ Интеграция\n- Автоматическое подвязывание к существующим сервисам\n- Использование общей сети Docker\n- Health checks и restart policies\n- Volume mounts для development\n\n## Требования\n\n- Docker и Docker Compose\n- Java 21\n- Maven\n- fswatch (для мониторинга)\n\n## Автор\n\nСистема создана viancis для автоматизации разработки микросервисов. "
        }
    ]
}