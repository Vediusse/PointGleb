{
    "sourceFile": "deploy/scripts/local-start.sh",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1754178642278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754178700559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,6 +184,6 @@\n             ;;\n     esac\n }\n \n-# Запуск основной функции\n+\n main \"$@\" \n\\ No newline at end of file\n"
                },
                {
                    "date": 1754182007243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,12 +109,9 @@\n     echo \"  logs                  Показать логи\"\n     echo \"  clean                 Очистка логов и PID файлов\"\n     echo \"  -h, --help            Показать эту справку\"\n     echo \"\"\n-    echo \"ПРИМЕРЫ:\"\n-    echo \"  $0 start              # Запуск всех сервисов\"\n-    echo \"  $0 stop               # Остановка всех сервисов\"\n-    echo \"  $0 status             # Проверка статуса\"\n+    \n }\n \n # Основная логика\n main() {\n"
                }
            ],
            "date": 1754178642278,
            "name": "Commit-0",
            "content": "#!/bin/bash\n\n# Скрипт для локального старта проекта\n# Автор: viancis\n# Версия: 1.0\n\nset -e\n\n# Цвета для вывода\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nBLUE='\\033[0;34m'\nNC='\\033[0m'\n\nprint_info() {\n    echo -e \"${BLUE}[INFO]${NC} $1\"\n}\n\nprint_success() {\n    echo -e \"${GREEN}[SUCCESS]${NC} $1\"\n}\n\nprint_warning() {\n    echo -e \"${YELLOW}[WARNING]${NC} $1\"\n}\n\nprint_error() {\n    echo -e \"${RED}[ERROR]${NC} $1\"\n}\n\n# Проверка зависимостей\ncheck_dependencies() {\n    if ! command -v mvn &> /dev/null; then\n        print_error \"Maven не установлен!\"\n        exit 1\n    fi\n    \n    if ! command -v java &> /dev/null; then\n        print_error \"Java не установлена!\"\n        exit 1\n    fi\n}\n\n# Сборка проекта\nbuild_project() {\n    print_info \"Сборка проекта...\"\n    mvn clean install -DskipTests\n    print_success \"Проект собран успешно\"\n}\n\n# Запуск сервиса\nstart_service() {\n    local service_name=$1\n    local service_dir=$2\n    local port=$3\n    \n    print_info \"Запуск $service_name на порту $port...\"\n    \n    cd \"$service_dir\"\n    nohup java -jar target/*.jar > ../${service_name}.log 2>&1 &\n    local pid=$!\n    echo $pid > ../${service_name}.pid\n    \n    cd ..\n    print_success \"$service_name запущен (PID: $pid)\"\n}\n\n# Остановка сервиса\nstop_service() {\n    local service_name=$1\n    \n    if [ -f \"${service_name}.pid\" ]; then\n        local pid=$(cat \"${service_name}.pid\")\n        print_info \"Остановка $service_name (PID: $pid)...\"\n        kill $pid 2>/dev/null || true\n        rm -f \"${service_name}.pid\"\n        print_success \"$service_name остановлен\"\n    fi\n}\n\n# Проверка статуса сервиса\ncheck_service_status() {\n    local service_name=$1\n    local port=$2\n    \n    if [ -f \"${service_name}.pid\" ]; then\n        local pid=$(cat \"${service_name}.pid\")\n        if ps -p $pid > /dev/null 2>&1; then\n            print_success \"$service_name работает (PID: $pid, Port: $port)\"\n        else\n            print_warning \"$service_name не работает (PID файл есть, но процесс не найден)\"\n        fi\n    else\n        print_warning \"$service_name не запущен\"\n    fi\n}\n\n# Показать справку\nshow_help() {\n    echo \"Использование: $0 [КОМАНДА]\"\n    echo \"\"\n    echo \"КОМАНДЫ:\"\n    echo \"  start                 Запуск всех сервисов\"\n    echo \"  stop                  Остановка всех сервисов\"\n    echo \"  restart               Перезапуск всех сервисов\"\n    echo \"  status                Статус всех сервисов\"\n    echo \"  build                 Только сборка проекта\"\n    echo \"  logs                  Показать логи\"\n    echo \"  clean                 Очистка логов и PID файлов\"\n    echo \"  -h, --help            Показать эту справку\"\n    echo \"\"\n    echo \"ПРИМЕРЫ:\"\n    echo \"  $0 start              # Запуск всех сервисов\"\n    echo \"  $0 stop               # Остановка всех сервисов\"\n    echo \"  $0 status             # Проверка статуса\"\n}\n\n# Основная логика\nmain() {\n    local command=$1\n    \n    # Проверка зависимостей\n    check_dependencies\n    \n    case $command in\n        start)\n            print_info \"Запуск проекта в локальном режиме\"\n            build_project\n            start_service \"user-service\" \"user\" \"8090\"\n            start_service \"point-service\" \"point\" \"8091\"\n            start_service \"statistic-service\" \"statistic\" \"8095\"\n            print_success \"Все сервисы запущены\"\n            print_info \"Доступные сервисы:\"\n            echo \"  - User Service: http://localhost:8090\"\n            echo \"  - Point Service: http://localhost:8091\"\n            echo \"  - Statistic Service: http://localhost:8095\"\n            ;;\n        stop)\n            print_info \"Остановка всех сервисов\"\n            stop_service \"user-service\"\n            stop_service \"point-service\"\n            stop_service \"statistic-service\"\n            print_success \"Все сервисы остановлены\"\n            ;;\n        restart)\n            print_info \"Перезапуск всех сервисов\"\n            $0 stop\n            sleep 2\n            $0 start\n            ;;\n        status)\n            print_info \"Статус сервисов\"\n            check_service_status \"user-service\" \"8090\"\n            check_service_status \"point-service\" \"8091\"\n            check_service_status \"statistic-service\" \"8095\"\n            ;;\n        build)\n            build_project\n            ;;\n        logs)\n            print_info \"Логи сервисов\"\n            echo \"=== User Service Log ===\"\n            tail -n 20 user-service.log 2>/dev/null || echo \"Лог не найден\"\n            echo \"\"\n            echo \"=== Point Service Log ===\"\n            tail -n 20 point-service.log 2>/dev/null || echo \"Лог не найден\"\n            echo \"\"\n            echo \"=== Statistic Service Log ===\"\n            tail -n 20 statistic-service.log 2>/dev/null || echo \"Лог не найден\"\n            ;;\n        clean)\n            print_info \"Очистка логов и PID файлов\"\n            rm -f *.log *.pid\n            print_success \"Очистка завершена\"\n            ;;\n        -h|--help|\"\")\n            show_help\n            ;;\n        *)\n            print_error \"Неизвестная команда: $command\"\n            show_help\n            exit 1\n            ;;\n    esac\n}\n\n# Запуск основной функции\nmain \"$@\" "
        }
    ]
}