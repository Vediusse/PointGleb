#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å hot reload
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./dev-deploy.sh [start|stop|restart|logs|status|rebuild|update]

set -e

PROJECT_NAME="gleb-dev"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
print_message() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_header() {
    echo -e "${BLUE}================================${NC}"
    echo -e "${BLUE}  GLEB DEVELOPMENT ENVIRONMENT${NC}"
    echo -e "${BLUE}================================${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker –∏ Docker Compose
check_dependencies() {
    if ! command -v docker &> /dev/null; then
        print_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        exit 1
    fi
    
    if ! command -v docker-compose &> /dev/null; then
        print_error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
start_dev_project() {
    print_message "–ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞ $PROJECT_NAME –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    docker-compose -f docker-compose.dev.yml down 2>/dev/null || true
    
    # –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
    docker-compose -f docker-compose.dev.yml up -d --build
    
    print_message "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    sleep 30
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    check_dev_services_status
    
    print_message "–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!"
    print_dev_service_urls
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
stop_dev_project() {
    print_message "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ $PROJECT_NAME..."
    docker-compose -f docker-compose.dev.yml down
    print_message "–ü—Ä–æ–µ–∫—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
restart_dev_project() {
    print_message "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞ $PROJECT_NAME..."
    stop_dev_project
    start_dev_project
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
show_dev_logs() {
    if [ -z "$1" ]; then
        print_message "–ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
        docker-compose -f docker-compose.dev.yml logs -f
    else
        print_message "–ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞ $1..."
        docker-compose -f docker-compose.dev.yml logs -f "$1"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
check_dev_services_status() {
    print_message "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    services=("postgres" "rabbitmq" "prometheus" "grafana" "user-service" "point-service" "statistic-service")
    
    for service in "${services[@]}"; do
        if docker-compose -f docker-compose.dev.yml ps | grep -q "$service.*Up"; then
            print_message "‚úÖ $service - –∑–∞–ø—É—â–µ–Ω"
        else
            print_error "‚ùå $service - –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        fi
    done
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ URL —Å–µ—Ä–≤–∏—Å–æ–≤
print_dev_service_urls() {
    echo ""
    print_message "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã (—Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏):"
    echo -e "${BLUE}User Service:${NC} http://localhost:8090"
    echo -e "${BLUE}Point Service:${NC} http://localhost:8091"
    echo -e "${BLUE}Statistic Service:${NC} http://localhost:8095"
    echo -e "${BLUE}RabbitMQ Management:${NC} http://localhost:15673 (guest/guest)"
    echo -e "${BLUE}Prometheus:${NC} http://localhost:9090"
    echo -e "${BLUE}Grafana:${NC} http://localhost:3000 (admin/admin)"
    echo ""
    print_message "–ú–µ—Ç—Ä–∏–∫–∏ —Å–µ—Ä–≤–∏—Å–æ–≤:"
    echo -e "${BLUE}User Service Metrics:${NC} http://localhost:8090/actuator/prometheus"
    echo -e "${BLUE}Point Service Metrics:${NC} http://localhost:8062/actuator/prometheus"
    echo -e "${BLUE}Statistic Service Metrics:${NC} http://localhost:8095/actuator/prometheus"
    echo ""
    print_message "üî• Hot Reload –∞–∫—Ç–∏–≤–µ–Ω! –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–¥–µ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω—ã."
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª–Ω–æ–π –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏ (–ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π)
rebuild_dev_project() {
    print_warning "–ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ (–ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π)..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    docker-compose -f docker-compose.dev.yml down
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤
    docker-compose -f docker-compose.dev.yml down --rmi all
    
    # –û—á–∏—Å—Ç–∫–∞ Maven cache
    docker volume rm gleb_maven_cache 2>/dev/null || true
    
    # –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
    docker-compose -f docker-compose.dev.yml up -d --build
    
    print_message "–ü—Ä–æ–µ–∫—Ç –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω –∏ –∑–∞–ø—É—â–µ–Ω!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–¥–∞ (–±–µ–∑ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏)
update_dev_code() {
    print_message "–ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞..."

    ./quick-rebuild.sh
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤
    docker-compose -f docker-compose.dev.yml restart user-service point-service statistic-service
    
    print_message "–ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω! –°–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã."
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞
show_dev_status() {
    print_message "–°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞ $PROJECT_NAME:"
    docker-compose -f docker-compose.dev.yml ps
    echo ""
    check_dev_services_status
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    print_header
    
    check_dependencies
    
    case "${1:-start}" in
        "start")
            start_dev_project
            ;;
        "stop")
            stop_dev_project
            ;;
        "restart")
            restart_dev_project
            ;;
        "logs")
            show_dev_logs "$2"
            ;;
        "status")
            show_dev_status
            ;;
        "rebuild")
            rebuild_dev_project
            ;;
        "update")
            update_dev_code
            ;;
        "help"|"-h"|"--help")
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞]"
            echo ""
            echo "–ö–æ–º–∞–Ω–¥—ã:"
            echo "  start     - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
            echo "  stop      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç"
            echo "  restart   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç"
            echo "  logs      - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
            echo "  logs [service] - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞"
            echo "  status    - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤"
            echo "  rebuild   - –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ (–ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π)"
            echo "  update    - –ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ (–±–µ–∑ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏)"
            echo "  help      - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
            echo ""
            echo " –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤–∫–ª—é—á–∞–µ—Ç:"
            echo "  - Hot reload –∫–æ–¥–∞"
            echo "  - –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ Maven –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
            echo "  - –ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–µ–∑ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏"
            ;;
        *)
            print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
            echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '$0 help' –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏."
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@" 