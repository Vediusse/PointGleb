version: '3.8'

services:
  # База данных
  postgres:
    image: postgres:15
    container_name: gleb-postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gleb-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: gleb-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5673:5672"
      - "15673:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - gleb-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: gleb-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - gleb-network
    depends_on:
      - postgres
      - rabbitmq

  # Grafana для визуализации метрик
  grafana:
    image: grafana/grafana:latest
    container_name: gleb-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - gleb-network
    depends_on:
      - prometheus

  # Микросервисы
  user-service:
    build:
      context: .
      dockerfile: Dockerfile.user
    container_name: gleb-user-service
    ports:
      - "8090:8090"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - gleb-network
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  point-service:
    build:
      context: .
      dockerfile: Dockerfile.point
    container_name: gleb-point-service
    ports:
      - "8091:8091"
      - "8062:8062"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - gleb-network
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  statistic-service:
    build:
      context: .
      dockerfile: Dockerfile.statistic
    container_name: gleb-statistic-service
    ports:
      - "8095:8095"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - gleb-network
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  rabbitmq_data:
  prometheus_data:
  grafana_data:

networks:
  gleb-network:
    driver: bridge 