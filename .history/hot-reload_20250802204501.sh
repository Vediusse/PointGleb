#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ hot reload —Å –ø–µ—Ä–µ—Å–±–æ—Ä–∫–æ–π
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./hot-reload.sh [service]

set -e

SERVICE=${1:-"all"}

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

print_message() {
    echo -e "${GREEN}[HOT RELOAD]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ fswatch
check_fswatch() {
    if ! command -v fswatch &> /dev/null; then
        print_warning "fswatch –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ hot reload:"
        echo "  brew install fswatch"
        echo ""
        print_info "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä—É—á–Ω–æ–π —Ä–µ–∂–∏–º: ./dev-deploy.sh update"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
rebuild_and_restart_service() {
    local service=$1
    print_message "–ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ $service..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å
    docker-compose -f docker-compose.dev.yml stop $service
    
    # –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑
    docker-compose -f docker-compose.dev.yml build --no-cache $service
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
    docker-compose -f docker-compose.dev.yml up -d $service
    
    print_message "–°–µ—Ä–≤–∏—Å $service –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω –∏ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
rebuild_and_restart_all_services() {
    print_message "–ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
    docker-compose -f docker-compose.dev.yml stop user-service point-service statistic-service
    
    # –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã
    docker-compose -f docker-compose.dev.yml build --no-cache user-service point-service statistic-service
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
    docker-compose -f docker-compose.dev.yml up -d user-service point-service statistic-service
    
    print_message "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã –∏ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ (–±–µ–∑ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏)
quick_restart_service() {
    local service=$1
    print_message "–ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ $service..."
    docker-compose -f docker-compose.dev.yml restart $service
    print_message "–°–µ—Ä–≤–∏—Å $service –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
quick_restart_all_services() {
    print_message "–ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose -f docker-compose.dev.yml restart user-service point-service statistic-service
    print_message "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
watch_changes() {
    local service=$1
    local rebuild_mode=${2:-"quick"} # quick –∏–ª–∏ rebuild
    
    case $service in
        "user"|"user-service")
            print_info "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ user-service (—Ä–µ–∂–∏–º: $rebuild_mode)..."
            fswatch -o user/src common/src | while read f; do
                print_message "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ user-service"
                if [ "$rebuild_mode" = "rebuild" ]; then
                    rebuild_and_restart_service "user-service"
                else
                    quick_restart_service "user-service"
                fi
            done
            ;;
        "point"|"point-service")
            print_info "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ point-service (—Ä–µ–∂–∏–º: $rebuild_mode)..."
            fswatch -o point/src common/src | while read f; do
                print_message "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ point-service"
                if [ "$rebuild_mode" = "rebuild" ]; then
                    rebuild_and_restart_service "point-service"
                else
                    quick_restart_service "point-service"
                fi
            done
            ;;
        "statistic"|"statistic-service")
            print_info "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ statistic-service (—Ä–µ–∂–∏–º: $rebuild_mode)..."
            fswatch -o statistic/src common/src | while read f; do
                print_message "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ statistic-service"
                if [ "$rebuild_mode" = "rebuild" ]; then
                    rebuild_and_restart_service "statistic-service"
                else
                    quick_restart_service "statistic-service"
                fi
            done
            ;;
        "all")
            print_info "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤–æ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö (—Ä–µ–∂–∏–º: $rebuild_mode)..."
            fswatch -o user/src point/src statistic/src common/src | while read f; do
                print_message "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–¥–µ"
                if [ "$rebuild_mode" = "rebuild" ]; then
                    rebuild_and_restart_all_services
                else
                    quick_restart_all_services
                fi
            done
            ;;
        *)
            print_warning "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–µ—Ä–≤–∏—Å: $service"
            echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã: user, point, statistic, all"
            exit 1
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
show_status() {
    print_info "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
    docker-compose -f docker-compose.dev.yml ps
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ª–æ–≥–æ–≤ —Å–µ—Ä–≤–∏—Å–∞
show_logs() {
    local service=$1
    print_info "–õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞ $service:"
    docker-compose -f docker-compose.dev.yml logs -f $service
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    case $1 in
        "rebuild")
            SERVICE=${2:-"all"}
            print_info "üî• –ó–∞–ø—É—Å–∫ hot reload —Å –ø–µ—Ä–µ—Å–±–æ—Ä–∫–æ–π"
            print_info "–°–µ—Ä–≤–∏—Å: $SERVICE"
            echo ""
            check_fswatch
            print_info "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
            echo ""
            watch_changes $SERVICE "rebuild"
            ;;
        "quick")
            SERVICE=${2:-"all"}
            print_info "üî• –ó–∞–ø—É—Å–∫ –±—ã—Å—Ç—Ä–æ–≥–æ hot reload"
            print_info "–°–µ—Ä–≤–∏—Å: $SERVICE"
            echo ""
            check_fswatch
            print_info "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
            echo ""
            watch_changes $SERVICE "quick"
            ;;
        "status")
            show_status
            ;;
        "logs")
            SERVICE=${2:-"user-service"}
            show_logs $SERVICE
            ;;
        "restart")
            SERVICE=${2:-"all"}
            if [ "$SERVICE" = "all" ]; then
                quick_restart_all_services
            else
                quick_restart_service $SERVICE
            fi
            ;;
        "rebuild-now")
            SERVICE=${2:-"all"}
            if [ "$SERVICE" = "all" ]; then
                rebuild_and_restart_all_services
            else
                rebuild_and_restart_service $SERVICE
            fi
            ;;
        *)
            print_info "üî• –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ hot reload (–±—ã—Å—Ç—Ä—ã–π —Ä–µ–∂–∏–º)"
            print_info "–°–µ—Ä–≤–∏—Å: $SERVICE"
            echo ""
            print_info "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
            echo "  ./hot-reload.sh [service]           - –±—ã—Å—Ç—Ä—ã–π hot reload"
            echo "  ./hot-reload.sh quick [service]     - –±—ã—Å—Ç—Ä—ã–π hot reload"
            echo "  ./hot-reload.sh rebuild [service]   - hot reload —Å –ø–µ—Ä–µ—Å–±–æ—Ä–∫–æ–π"
            echo "  ./hot-reload.sh restart [service]   - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞"
            echo "  ./hot-reload.sh rebuild-now [service] - –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"
            echo "  ./hot-reload.sh status              - —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤"
            echo "  ./hot-reload.sh logs [service]      - –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞"
            echo ""
            check_fswatch
            print_info "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
            echo ""
            watch_changes $SERVICE "quick"
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@" 