FROM openjdk:21-jdk-slim

WORKDIR /app

# Устанавливаем необходимые инструменты
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Копируем Maven wrapper и pom файлы
COPY mvnw .
COPY mvnw.cmd .
COPY pom.xml .
COPY .mvn .mvn
COPY user/pom.xml ./user/pom.xml
COPY point/pom.xml ./point/pom.xml
COPY statistic/pom.xml ./statistic/pom.xml
COPY common/pom.xml ./common/pom.xml

# Скачиваем зависимости (кэшируется отдельно)
RUN ./mvnw dependency:go-offline -pl point -am

# Копируем исходный код
COPY point/src ./point/src
COPY common/src ./common/src

# Компилируем приложение
RUN ./mvnw compile -pl point -am -DskipTests

# Создаем JAR файл
RUN ./mvnw package -pl point -am -DskipTests

# Копируем собранный JAR файл
RUN cp point/target/*.jar /app/target/app.jar

# Создаем скрипт для hot reload
RUN echo '#!/bin/bash\n\
echo "Starting hot reload development server..."\n\
echo "Watching for changes in /app/point/src and /app/common/src..."\n\
\n\
# Функция для пересборки\n\
rebuild() {\n\
    echo "Changes detected, rebuilding..."\n\
    cd /app\n\
    ./mvnw compile -pl point -am -DskipTests\n\
    ./mvnw package -pl point -am -DskipTests\n\
    cp point/target/*.jar /app/target/app.jar\n\
    echo "Rebuild completed!"\n\
}\n\
\n\
# Запускаем приложение с Spring DevTools\n\
java -Dspring.devtools.restart.enabled=true \\\n\
     -Dspring.devtools.livereload.enabled=true \\\n\
     -Dspring.devtools.restart.poll-interval=2s \\\n\
     -Dspring.devtools.restart.quiet-period=1s \\\n\
     -Dspring.devtools.restart.additional-paths=/app/point/src,/app/common/src \\\n\
     -Dspring.devtools.restart.exclude=static/**,public/**,templates/** \\\n\
     -jar /app/target/app.jar &\n\
\n\
# Сохраняем PID приложения\n\
APP_PID=$!\n\
\n\
# Мониторим изменения файлов\n\
while true; do\n\
    # Проверяем изменения в исходном коде\n\
    if find /app/point/src /app/common/src -name "*.java" -newer /app/target/app.jar 2>/dev/null | grep -q .; then\n\
        echo "Java files changed, rebuilding..."\n\
        kill $APP_PID 2>/dev/null || true\n\
        sleep 2\n\
        rebuild\n\
        java -Dspring.devtools.restart.enabled=true \\\n\
             -Dspring.devtools.livereload.enabled=true \\\n\
             -Dspring.devtools.restart.poll-interval=2s \\\n\
             -Dspring.devtools.restart.quiet-period=1s \\\n\
             -Dspring.devtools.restart.additional-paths=/app/point/src,/app/common/src \\\n\
             -Dspring.devtools.restart.exclude=static/**,public/**,templates/** \\\n\
             -jar /app/target/app.jar &\n\
        APP_PID=$!\n\
    fi\n\
    sleep 1\n\
done' > /app/start-dev.sh

RUN chmod +x /app/start-dev.sh

# Открываем порты
EXPOSE 8091 8062

# Запускаем скрипт разработки
CMD ["/app/start-dev.sh"] 