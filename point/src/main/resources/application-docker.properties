spring.application.name=point
jwt.secret=af60addca9ea3e3c099551e1b6576c9966dce0a33de879dd7e160f86dbd872ca236d6e9ee66fb6e30039fe7c345324a10f3d0741b0600fa7a45df4c6691eff4f4209767ed39f51e37717d8feecd5dd14fc34ebe619e6a29ae91d9ffe134cb5718bec0b3680d6ae7fc09e67763fe7c05d05d3ba69f47211163852633755b7f861132b0c98f8d7c1af9152d547408e676867a0a32fb525a4354180f5fb6b2dc23b5faa4155b8db63385f96259a90b6ee0e74a5b90a4f0f4fa96fafc296c64588b5c009b3829ae2e1d69a1cf7569b50a65fa553350495d18816f785f961c970c0a9cb9c8da25cc5e9fa4a3e9527a132d616b232d1ee21c3bf6dc8d9e3376e2e82c0
jwt.expiration=360000000
server.port=8091

# Docker environment database settings
spring.datasource.url=jdbc:postgresql://postgres:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.default_schema=public
spring.jpa.properties.hibernate.jdbc.fetch_size=10

management.endpoint.metrics.enabled=true
management.metrics.cache.instrumented=true
spring.jmx.enabled=true

spring.output.ansi.enabled=ALWAYS

logging.level.POINT=INFO
logging.pattern.console=%d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX} %clr(%5p){blue} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %clr(%m){%level.color}%n%wEx

logging.level.com.viancis.common.notification=INFO
logging.pattern.level.INFO=cyan
logging.pattern.level.DEBUG=magenta
logging.pattern.level.WARN=yellow
logging.pattern.level.ERROR=red
logging.pattern.level.TRACE=white

management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.prometheus.enabled=true
management.prometheus.metrics.export.enabled=true

management.metrics.enable.jvm.threads=true
management.metrics.enable.jvm.threads.cpu=true
management.metrics.enable.process.cpu=true
management.metrics.enable.process.files=true

management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.enable.all=true

management.metrics.export.prometheus.rsocket.enabled=true

management.server.port=8062

# Docker environment RabbitMQ settings
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

logging.level.org.springframework.amqp=DEBUG 